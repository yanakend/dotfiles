[include]
  path = ~/.gitconfig.local

[color]
  ui = true
  diff = true
  quotepath = false

[color "branch"]
  current = cyan reverse
  local = yellow
  remote = magenta

[color "status"]
  added = yellow
  changed = green
  untracked = cyan reverse
  branch = magenta

[core]
  autocrlf = input
  editor = /usr/bin/vim
  excludesfile = ~/.gitignore.global
  pager = less -R

[alias]
  br = branch -v
  co = "![ -z \"$1\" ] && BR=$(git branch -av | grep -v remotes/origin/HEAD | peco | sed -e s@remotes/origin/@@ | cut -d' ' -f3 ); git checkout $BR"
  brdel = "![ -z \"$1\" ] && BR=$(git branch -v | peco | cut -d' ' -f3); git branch -D $BR"
  brdelall = "![ -z \"$1\" ] && BR=$(git branch -v | peco | cut -d' ' -f3,3) && git branch -D $BR && git push --delete origin $BR"
  a = "![ -z \"$1\" ] && FILES=$(git status --porcelain | peco | awk -F ' ' '{print $NF}' | tr '\n' ' '); git add $FILES"
  r = "![ -z \"$1\" ] && FILES=$(git status --porcelain | peco | awk -F ' ' '{print $NF}' | tr '\n' ' '); git reset $FILES"
  c = commit -v
  cp = cherry-pick -x
  d = diff
  ds = diff --staged
  dt = difftool -d 
  dts = difftool -d --staged 
  l = log --date-order -C -M --pretty=format:\"%C(green)%h %C(reset)[%ad] %C(yellow)%an %C(cyan reverse)%d%C(reset) %s\" --date=iso8601
  graph = log --graph --date-order -C -M --pretty=format:\"%C(green)%h %C(reset)[%ad] %C(yellow)%an %C(cyan reverse)%d%C(reset) %s\" --date=iso8601
  pl = pull
  pr = pull --rebase
  ps = push -u
  s = "! git status -sb; SC=$(git stash list | wc -l | bc); [ $SC -ge 1 ] && echo \"[stash `git stash list | wc -l | bc`]\""
  ss = stash
  save = "!f () { BR=$(git rev-parse --abbrev-ref HEAD); git checkout -b yanakend_local/`date +'%Y%m%d%k%M%S'`; git add .; git commit -m '[WIP]Stash save'; git checkout $BR; }; f"
  contains = branch -r --contains
  ignore-list = "!f() { curl -L -s https://www.gitignore.io/api/$@ ;}; f"
  amend = commit --amend --no-edit
  set-upstream = "!f() { RE=origin; [ -n \"$1\" ] && RE=$1; git branch -u $RE/`git rev-parse --abbrev-ref HEAD` ;}; f"
  ignore = update-index --assume-unchanged
  unignore = update-index --no-assume-unchanged
  ignored = !git ls-files -v | grep "^[[:lower:]]"
  sshow = "!f() { git show stash@{$@} ;}; f"

[help]
  autocorrect = 30
[push]
  default = current
[difftool]
  prompt = false
[mergetool]
  keepBackup = false
  prompt = false
[rebase]
  autosquash = true
[fetch]
  prune = true
[branch]
	autosetupmerge = true
